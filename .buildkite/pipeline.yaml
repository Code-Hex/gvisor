_templates:
  common: &common
    timeout_in_minutes: 30
    retry:
      automatic:
        - exit_status: -1
          limit: 10
        - exit_status: "*"
          limit: 2
  source_test: &source_test
    if: build.env("STAGED_BINARIES") == null
  platform_specific_agents: &platform_specific_agents {}
  kvm_agents: &kvm_agents {kvm: "true"}
  ubuntu_agents: &ubuntu_agents {os: "ubuntu"}
  benchmarks: &benchmarks
    timeout_in_minutes: 120
    retry:
      automatic: false
    soft_fail: true
    if: build.branch == "master"
    env:
      # BENCHMARKS_OFFICIAL is set from hooks/pre-command, based
      # on whether this is executing on the master branch.
      BENCHMARKS_DATASET: buildkite
      BENCHMARKS_PROJECT: gvisor-benchmarks
      BENCHMARKS_TABLE: benchmarks
      BENCHMARKS_UPLOAD: true
    agents:
      <<: *kvm_agents
      <<: *platform_specific_agents
      arch: "amd64"
  netstack_test: &netstack_test
    env:
      PACKAGES: >
        ./pkg/tcpip
        ./pkg/tcpip/adapters/gonet
        ./pkg/tcpip/header
        ./pkg/tcpip/link/channel
        ./pkg/tcpip/network/ipv4
        ./pkg/tcpip/network/ipv6
        ./pkg/tcpip/stack
        ./pkg/tcpip/transport/icmp
        ./pkg/tcpip/transport/tcp
        ./pkg/tcpip/transport/udp
        ./pkg/bufferv2
        ./pkg/waiter
env:
  # Force a clean checkout every time to avoid reuse of files between runs.
  BUILDKITE_CLEAN_CHECKOUT: true

  # Optional filter for syscall tests.
  SYSCALL_TEST_FILTERS: ''

steps:
  # Run basic smoke tests before preceding to other tests.
  - <<: *common
    label: ":java: Java runtime tests"
    command: make RUNTIME_LOG_DIR=/tmp/$${BUILDKITE_JOB_ID} java17-runtime-tests
    parallelism: 40
    agents:
      <<: *platform_specific_agents
      <<: *ubuntu_agents
      arch: "amd64"
